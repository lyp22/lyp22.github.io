<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>QAQu’s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qaqu.net/"/>
  <updated>2022-05-25T05:18:21.321Z</updated>
  <id>https://qaqu.net/</id>
  
  <author>
    <name>QAQu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Latex 修改公式前后间距</title>
    <link href="https://qaqu.net/2022-5-3-Latex%20%E4%BF%AE%E6%94%B9%E5%85%AC%E5%BC%8F%E5%89%8D%E5%90%8E%E9%97%B4%E8%B7%9D/"/>
    <id>https://qaqu.net/2022-5-3-Latex%20%E4%BF%AE%E6%94%B9%E5%85%AC%E5%BC%8F%E5%89%8D%E5%90%8E%E9%97%B4%E8%B7%9D/</id>
    <published>2022-05-02T16:00:00.000Z</published>
    <updated>2022-05-25T05:18:21.321Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">\makeatletter</span><br><span class="line">\renewcommand\normalsize&#123;%</span><br><span class="line">\abovedisplayskip 5\p@ \@plus2\p@ \@minus5\p@</span><br><span class="line">\abovedisplayshortskip \z@ \@plus3\p@</span><br><span class="line">\belowdisplayshortskip 6\p@ \@plus3\p@ \@minus3\p@</span><br><span class="line">\belowdisplayskip \abovedisplayskip</span><br><span class="line">\let\@listi\@listI&#125;</span><br><span class="line">\makeatother</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;\makeatletter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\renewcommand\normalsize&amp;#123;%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\abovedisplayskip 5\p@ \@plus2\p@ \@minus5\p@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\abovedisplayshortskip \z@ \@plus3\p@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\belowdisplayshortskip 6\p@ \@plus3\p@ \@minus3\p@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\belowdisplayskip \abovedisplayskip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\let\@listi\@listI&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\makeatother&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="LATEX" scheme="https://qaqu.net/categories/LATEX/"/>
    
    
      <category term="LATEX" scheme="https://qaqu.net/tags/LATEX/"/>
    
  </entry>
  
  <entry>
    <title>FRP 内网端口映射</title>
    <link href="https://qaqu.net/2022-2-4-FRP%20%E5%86%85%E7%BD%91%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/"/>
    <id>https://qaqu.net/2022-2-4-FRP%20%E5%86%85%E7%BD%91%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/</id>
    <published>2022-02-03T16:00:00.000Z</published>
    <updated>2022-05-25T05:15:27.852Z</updated>
    
    <content type="html"><![CDATA[<h1 id="frp的作用"><a href="#frp的作用" class="headerlink" title="frp的作用"></a>frp的作用</h1><p>利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。<br>对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。<br>利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。</p><a id="more"></a><h1 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h1><p>1、实现功能</p><p>（1）外网通过ssh访问内网机器<br>（2）自定义绑定域名访问内网web服务</p><p>2、配置前准备</p><p>（1）公网服务器1台<br>（2）内网服务器1台（我这里演示的是linux环境，win10上面vmware安装的centos7）<br>（3）公网服务器绑定域名1个（实现二1中（1）功能不需要公网服务器绑定域名，二1中（2）功能必须需要公网服务器绑定域名）<br>（4）内网服务器部署一个web服务，可以用tomcat模拟，这里就不演示了</p><h1 id="安装frp"><a href="#安装frp" class="headerlink" title="安装frp"></a>安装frp</h1><p>1、公网服务器与内网服务器都需要下载frp进行安装，公网服务器（服务端）配置关注步骤6,内网服务器（客户端）关注步骤7<br>2、下载地址是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;fatedier&#x2F;frp&#x2F;releases，下载linux版本frp_0.13.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><p>也可以这样选择下载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;fatedier&#x2F;frp&#x2F;releases&#x2F;download&#x2F;v0.13.0&#x2F;frp_0.13.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><p>3、新建目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;frp</span><br></pre></td></tr></table></figure><p>上传frp_0.13.0_linux_amd64.tar.gz至linux服务器该目录下</p><p>4、解压tar -zxvf  frp_0.13.0_linux_amd64.tar.gz</p><p>5、进入解压目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd frp_0.13.0_linux_amd64</span><br></pre></td></tr></table></figure><p>这里主要关注4个文件，分别是frpc、frpc.ini和frps、frps.ini，前者两个文件是客户端所关注文件，后者两个文件是服务端所关注两个文件。</p><p>6、配置服务端（公网服务器），首先删掉frpc、frpc.ini两个文件，然后再进行配置，vi ./frps.ini，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port &#x3D; 7000 #与客户端绑定的进行通信的端口</span><br><span class="line">vhost_http_port &#x3D; 6081 #访问客户端web服务自定义的端口号</span><br></pre></td></tr></table></figure><p>保存然后启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;frps -c .&#x2F;frps.ini</span><br></pre></td></tr></table></figure><p>这是前台启动，后台启动命令为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup .&#x2F;frps -c .&#x2F;frps.ini &amp;</span><br></pre></td></tr></table></figure><p>7、配置客户端（内网服务器），首先删掉frps、frps.ini两个文件,然后再进行配置，vi ./frpc.ini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; 120.56.37.48 #公网服务器ip</span><br><span class="line">server_port &#x3D; 7000 #与服务端bind_port一致</span><br><span class="line">#公网通过ssh访问内部服务器</span><br><span class="line">[ssh]</span><br><span class="line">type &#x3D; tcp #连接协议</span><br><span class="line">local_ip &#x3D; 192.168.3.48 #内网服务器ip</span><br><span class="line">local_port &#x3D; 22 #ssh默认端口号</span><br><span class="line">remote_port &#x3D; 6000 #自定义的访问内部ssh端口号</span><br><span class="line">#公网访问内部web服务器以http方式</span><br><span class="line">[web]</span><br><span class="line">type &#x3D; http #访问协议</span><br><span class="line">local_port &#x3D; 8081 #内网web服务的端口号</span><br><span class="line">custom_domains &#x3D; repo.iwi.com #所绑定的公网服务器域名，一级、二级域名都可以</span><br></pre></td></tr></table></figure><p>保存然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;frpc -c .&#x2F;frpc.ini</span><br></pre></td></tr></table></figure><p>启动，这是前台启动，后台启动命令为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup .&#x2F;frpc -c .&#x2F;frpc.ini &amp;</span><br></pre></td></tr></table></figure><p>8、访问方式</p><p>（1）外网ssh访问内网服务器（直接使用配置里面数据演示）</p><p>ip：120.56.37.48  port:6000   用户名：linux服务器的用户  密码：linux服务器的密码        或者</p><p>ip：120.56.37.48  port:22   用户名：linux服务器的用户  密码：linux服务器的密码            或者</p><p>ip：repo.iwi.com  port:6000   用户名：linux服务器的用户  密码：linux服务器的密码         或者</p><p>ip：repo.iwi.com  port:22   用户名：linux服务器的用户  密码：linux服务器的密码</p><p>（2）自定义绑定域名访问内网web服务（直接使用配置里面数据演示）</p><p>  repo.iwi.com:6081</p><h1 id="可以正常运行的配置文件"><a href="#可以正常运行的配置文件" class="headerlink" title="可以正常运行的配置文件"></a>可以正常运行的配置文件</h1><p>通过外网IP：6000端口，可以ssh和FTP</p><p>公共服务器<br>[common]<br>bind_port = 7000<br>vhost_http_port = 23333</p><p>内网服务器</p><p>[common]<br>server_addr = 外网IP<br>server_port = 7000<br>[ssh]<br>type = tcp<br>local_ip = 127.0.0.1<br>local_port = 23333<br>remote_port = 6000</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;frp的作用&quot;&gt;&lt;a href=&quot;#frp的作用&quot; class=&quot;headerlink&quot; title=&quot;frp的作用&quot;&gt;&lt;/a&gt;frp的作用&lt;/h1&gt;&lt;p&gt;利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。&lt;br&gt;对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。&lt;br&gt;利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://qaqu.net/categories/ubuntu/"/>
    
    
      <category term="端口映射" scheme="https://qaqu.net/tags/%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>xlrd无法读取xlsx</title>
    <link href="https://qaqu.net/2021-9-18-xlrd%E6%97%A0%E6%B3%95%E8%AF%BB%E5%8F%96xlsx/"/>
    <id>https://qaqu.net/2021-9-18-xlrd%E6%97%A0%E6%B3%95%E8%AF%BB%E5%8F%96xlsx/</id>
    <published>2021-09-17T16:00:00.000Z</published>
    <updated>2022-05-25T05:10:52.111Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="https://blog.csdn.net/zhaoleiedu/article/details/111472654" target="_blank" rel="noopener">https://blog.csdn.net/zhaoleiedu/article/details/111472654</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xlrd&#x3D;&#x3D;1.2.0</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;a href=&quot;https://blog.csdn.net/zhaoleiedu/article/details/111472654&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/zhaoleiedu/article/details/111472654&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install xlrd&amp;#x3D;&amp;#x3D;1.2.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://qaqu.net/categories/ubuntu/"/>
    
    
      <category term="xlrd" scheme="https://qaqu.net/tags/xlrd/"/>
    
  </entry>
  
  <entry>
    <title>更新nvidia驱动</title>
    <link href="https://qaqu.net/2021-5-24-%E6%9B%B4%E6%96%B0nvidia%E9%A9%B1%E5%8A%A8/"/>
    <id>https://qaqu.net/2021-5-24-%E6%9B%B4%E6%96%B0nvidia%E9%A9%B1%E5%8A%A8/</id>
    <published>2021-05-23T16:00:00.000Z</published>
    <updated>2022-05-25T05:09:07.134Z</updated>
    
    <content type="html"><![CDATA[<p>查看之前对驱动的操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg --list | grep nvidia-*</span><br></pre></td></tr></table></figure><p>卸载当前驱动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge nvidia*</span><br></pre></td></tr></table></figure><p>把显卡驱动加入ppa</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:graphics-drivers</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>之前安装nvidia驱动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nvidia-415 nvidia-settings nvidia-prime</span><br></pre></td></tr></table></figure><p>Ubuntu 20 安装nvidia驱动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nvidia-driver-450</span><br></pre></td></tr></table></figure><p>禁用nvidia的本地更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-mark hold nvidia-driver-450</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;查看之前对驱动的操作&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo dpkg --list | grep nvidia-*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;卸载当前驱动&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get purge nvidia*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;把显卡驱动加入ppa&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo add-apt-repository ppa:graphics-drivers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;之前安装nvidia驱动&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install nvidia-415 nvidia-settings nvidia-prime&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Ubuntu 20 安装nvidia驱动&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install nvidia-driver-450&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;禁用nvidia的本地更新&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-mark hold nvidia-driver-450&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://qaqu.net/categories/ubuntu/"/>
    
    
      <category term="nvidia" scheme="https://qaqu.net/tags/nvidia/"/>
    
  </entry>
  
  <entry>
    <title>本地仓库上传github</title>
    <link href="https://qaqu.net/2021-4-29-%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E4%B8%8A%E4%BC%A0github/"/>
    <id>https://qaqu.net/2021-4-29-%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E4%B8%8A%E4%BC%A0github/</id>
    <published>2021-04-28T16:00:00.000Z</published>
    <updated>2021-04-29T10:59:39.283Z</updated>
    
    <content type="html"><![CDATA[<h1 id="远程库与本地库之间的操作"><a href="#远程库与本地库之间的操作" class="headerlink" title="远程库与本地库之间的操作"></a>远程库与本地库之间的操作</h1><p>1.从远程克隆一份到本地可以通过git clone</p><p>Git支持HTTPS和SSH协议，SSH速度更快</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:username&#x2F;repositoriesname.git</span><br></pre></td></tr></table></figure><p>2.本地库关联远程库，在本地仓库目录运行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:username&#x2F;repositoriesname.git</span><br></pre></td></tr></table></figure><p>3.推送master分支的所有内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>第一次使用加上了-u参数，是推送内容并关联分支。</p><p>推送成功后就可以看到远程和本地的内容一模一样，下次只要本地作了提交，就可以通过命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="把最新内容推送到Github"><a href="#把最新内容推送到Github" class="headerlink" title="把最新内容推送到Github"></a>把最新内容推送到Github</h1><p>不检查强行推送到github</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure><p>添加SSH Key 到GitHub</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot; #生成新的key文件,邮箱地址填你的Github地址</span><br><span class="line">#Enter file in which to save the key (&#x2F;Users&#x2F;your_user_directory&#x2F;.ssh&#x2F;id_rsa):&lt;回车就好&gt;</span><br><span class="line">#接下来会让你输入密码</span><br></pre></td></tr></table></figure><p>在github上Setting中选择SSH and GPG keys点击New SSHKey</p><p>然后找到当前用户目录下C:\Users\用户名\ .ssh id_rsa.pub文件以文本方式打开。打开之后全部复制到key中</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;远程库与本地库之间的操作&quot;&gt;&lt;a href=&quot;#远程库与本地库之间的操作&quot; class=&quot;headerlink&quot; title=&quot;远程库与本地库之间的操作&quot;&gt;&lt;/a&gt;远程库与本地库之间的操作&lt;/h1&gt;&lt;p&gt;1.从远程克隆一份到本地可以通过git clone&lt;/p&gt;
&lt;p&gt;Git支持HTTPS和SSH协议，SSH速度更快&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone git@github.com:username&amp;#x2F;repositoriesname.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;2.本地库关联远程库，在本地仓库目录运行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git remote add origin git@github.com:username&amp;#x2F;repositoriesname.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;3.推送master分支的所有内容&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push -u origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;第一次使用加上了-u参数，是推送内容并关联分支。&lt;/p&gt;
&lt;p&gt;推送成功后就可以看到远程和本地的内容一模一样，下次只要本地作了提交，就可以通过命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://qaqu.net/categories/git/"/>
    
    
      <category term="常用" scheme="https://qaqu.net/tags/%E5%B8%B8%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>服务器更换用户cuda版本</title>
    <link href="https://qaqu.net/2021-4-19-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9B%B4%E6%8D%A2%E7%94%A8%E6%88%B7cuda%E7%89%88%E6%9C%AC/"/>
    <id>https://qaqu.net/2021-4-19-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9B%B4%E6%8D%A2%E7%94%A8%E6%88%B7cuda%E7%89%88%E6%9C%AC/</id>
    <published>2021-04-18T16:00:00.000Z</published>
    <updated>2022-05-25T05:07:39.135Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.0&#x2F;bin$&#123;PATH:+:$&#123;PATH&#125;&#125;</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.0&#x2F;lib64$&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125;&#125;</span><br><span class="line">export CUDA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.0</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export PATH&amp;#x3D;&amp;#x2F;usr&amp;#x2F;local&amp;#x2F;cuda-10.0&amp;#x2F;bin$&amp;#123;PATH:+:$&amp;#123;PATH&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export LD_LIBRARY_PATH&amp;#x3D;&amp;#x2F;usr&amp;#x2F;local&amp;#x2F;cuda-10.0&amp;#x2F;lib64$&amp;#123;LD_LIBRARY_PATH:+:$&amp;#123;LD_LIBRARY_PATH&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export CUDA_HOME&amp;#x3D;&amp;#x2F;usr&amp;#x2F;local&amp;#x2F;cuda-10.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://qaqu.net/categories/ubuntu/"/>
    
    
      <category term="cuda" scheme="https://qaqu.net/tags/cuda/"/>
    
  </entry>
  
  <entry>
    <title>bashrc中更新cuda指向</title>
    <link href="https://qaqu.net/2021-2-26-bashrc%E4%B8%AD%E6%9B%B4%E6%96%B0cuda%E6%8C%87%E5%90%91/"/>
    <id>https://qaqu.net/2021-2-26-bashrc%E4%B8%AD%E6%9B%B4%E6%96%B0cuda%E6%8C%87%E5%90%91/</id>
    <published>2021-02-25T16:00:00.000Z</published>
    <updated>2021-02-26T02:33:50.589Z</updated>
    
    <content type="html"><![CDATA[<p>这里是指向cuda11.0，其他版本替换cuda-11.0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-11.0&#x2F;bin$&#123;PATH:+:$&#123;PATH&#125;&#125;</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-11.0&#x2F;lib64$&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125;&#125;</span><br><span class="line">export CUDA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-11.0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里是指向cuda11.0，其他版本替换cuda-11.0&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
    
      <category term="cuda" scheme="https://qaqu.net/categories/cuda/"/>
    
    
      <category term="常用" scheme="https://qaqu.net/tags/%E5%B8%B8%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>编译安装GCC7.5.0</title>
    <link href="https://qaqu.net/2021-2-26-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85GCC7.5.0/"/>
    <id>https://qaqu.net/2021-2-26-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85GCC7.5.0/</id>
    <published>2021-02-25T16:00:00.000Z</published>
    <updated>2022-05-25T05:04:51.602Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装GMP"><a href="#安装GMP" class="headerlink" title="安装GMP"></a>安装GMP</h1><p>安装GMP 之前需要先安装m4 (不然会出错），m4可以通过命名自动安装$sudo apt-get install m4</p><p>去去libgmp官网下载最新的gmp包，<a href="https://gmplib.org/，例如我下载的是gmp-6.1.2" target="_blank" rel="noopener">https://gmplib.org/，例如我下载的是gmp-6.1.2</a><br>解压下载的包<br>tar -jvxf gmp-6.1.2.tar.bz2</p><p>之后按如下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd gmp-6.1.2</span><br><span class="line">.&#x2F;configure --enable-cxx -prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;gmp-6.0.0</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="安装mpfr"><a href="#安装mpfr" class="headerlink" title="安装mpfr"></a>安装mpfr</h1><p><a href="https://www.mpfr.org/mpfr-current/" target="_blank" rel="noopener">https://www.mpfr.org/mpfr-current/</a> 下载</p><p>tar -zxvf mpfr-3.1.6.tar.gz 解压</p><p>进入mpfr-3.1.6</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> .&#x2F;configure --with-gmp-include&#x3D;&#x2F;usr&#x2F;local&#x2F;include --with-gmp-lib&#x3D;&#x2F;usr&#x2F;local&#x2F;lib(删除)</span><br><span class="line"> </span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;mpfr-4.1.0 --with-gmp&#x3D;&#x2F;usr&#x2F;local&#x2F;gmp-6.0.0</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h1 id="安装MPC"><a href="#安装MPC" class="headerlink" title="安装MPC"></a>安装MPC</h1><p><a href="http://ftp.gnu.org/gnu/mpc/" target="_blank" rel="noopener">http://ftp.gnu.org/gnu/mpc/</a><br>下载，然后解压<br>tar -zxvf mpc-1.2.1.tar.gz</p><p> ./configure –prefix=/usr/local/mpc-1.2.1 –with-gmp=/usr/local/gmp-6.0.0 –with-mpfr=/usr/local/mpfr-4.1.0<br> make<br> make check</p><h1 id="安装GCC"><a href="#安装GCC" class="headerlink" title="安装GCC"></a>安装GCC</h1><p><a href="http://ftp.gnu.org/gnu/gcc/gcc-7.5.0/" target="_blank" rel="noopener">http://ftp.gnu.org/gnu/gcc/gcc-7.5.0/</a><br>下载，然后解压<br>tar -zxvf </p><p>../gcc-7.5.0/configure –prefix=/usr/local/gcc-7.5.0 –build=x86_64-linux（会出错）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;gcc-7.5.0&#x2F;configure --disable-multilib --enable-languages&#x3D;c,c++（删除）</span><br><span class="line"></span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;gcc-7.5.0 -enable-threads&#x3D;posix -disable-checking -disable-multilib -enable-languages&#x3D;c,c++ --with-gmp&#x3D;&#x2F;usr&#x2F;local&#x2F;gmp-6.0.0 --with-mpfr&#x3D;&#x2F;usr&#x2F;local&#x2F;mpfr-4.1.0 --with-mpc&#x3D;&#x2F;usr&#x2F;local&#x2F;mpc-1.2.1</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装GMP&quot;&gt;&lt;a href=&quot;#安装GMP&quot; class=&quot;headerlink&quot; title=&quot;安装GMP&quot;&gt;&lt;/a&gt;安装GMP&lt;/h1&gt;&lt;p&gt;安装GMP 之前需要先安装m4 (不然会出错），m4可以通过命名自动安装$sudo apt-get install m4&lt;/p&gt;
&lt;p&gt;去去libgmp官网下载最新的gmp包，&lt;a href=&quot;https://gmplib.org/，例如我下载的是gmp-6.1.2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://gmplib.org/，例如我下载的是gmp-6.1.2&lt;/a&gt;&lt;br&gt;解压下载的包&lt;br&gt;tar -jvxf gmp-6.1.2.tar.bz2&lt;/p&gt;
&lt;p&gt;之后按如下操作：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd gmp-6.1.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&amp;#x2F;configure --enable-cxx -prefix&amp;#x3D;&amp;#x2F;usr&amp;#x2F;local&amp;#x2F;gmp-6.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make check&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="GCC" scheme="https://qaqu.net/categories/GCC/"/>
    
    
      <category term="GCC" scheme="https://qaqu.net/tags/GCC/"/>
    
  </entry>
  
  <entry>
    <title>B站专栏文章复制</title>
    <link href="https://qaqu.net/2020-6-20-B%E7%AB%99%E4%B8%93%E6%A0%8F%E6%96%87%E7%AB%A0%E5%A4%8D%E5%88%B6/"/>
    <id>https://qaqu.net/2020-6-20-B%E7%AB%99%E4%B8%93%E6%A0%8F%E6%96%87%E7%AB%A0%E5%A4%8D%E5%88%B6/</id>
    <published>2020-06-19T16:00:00.000Z</published>
    <updated>2020-06-20T12:11:54.637Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">document.querySelector(&#39;div.article-holder&#39;).classList.remove(&#39;unable-reprint&#39;);</span><br><span class="line">document.querySelector(&#39;div.article-holder&#39;).addEventListener(&#39;copy&#39;,function(e)&#123;</span><br><span class="line">    e.clipboardData.setData(&quot;text&quot;,window.getSelection().toString())</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="bilibili" scheme="https://qaqu.net/categories/bilibili/"/>
    
    
      <category term="常用" scheme="https://qaqu.net/tags/%E5%B8%B8%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>访问谷歌xx出现but your computer or network may be sending automated queries问题的解决办法</title>
    <link href="https://qaqu.net/2020-3-4-%E8%AE%BF%E9%97%AE%E8%B0%B7%E6%AD%8Cxx%E5%87%BA%E7%8E%B0but%20your%20computer%20or%20network%20may%20be%20sending%20automated%20queries%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://qaqu.net/2020-3-4-%E8%AE%BF%E9%97%AE%E8%B0%B7%E6%AD%8Cxx%E5%87%BA%E7%8E%B0but%20your%20computer%20or%20network%20may%20be%20sending%20automated%20queries%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2020-03-03T16:00:00.000Z</published>
    <updated>2020-03-04T04:48:38.490Z</updated>
    
    <content type="html"><![CDATA[<p>方法是在hosts中指定谷歌学术的IPv6地址。<br>首先需要VPS支持IPv6。我使用的是vultr，在server information界面，点进Settings-IPv6进行分配地址，然后修改hosts文件。</p><p>sudo nano /etc/hosts</p><p>在hosts文件中加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## Scholar 学术搜索</span><br><span class="line">2404:6800:4008:c06::be scholar.google.com</span><br><span class="line">2404:6800:4008:c06::be scholar.google.com.hk</span><br><span class="line">2404:6800:4008:c06::be scholar.google.com.tw</span><br><span class="line">2404:6800:4005:805::200e scholar.google.cn #www.google.cn</span><br></pre></td></tr></table></figure><p>可以在这里获取最新的IPv6地址<br><a href="https://raw.githubusercontent.com/lennylxx/ipv6-hosts/master/hosts" target="_blank" rel="noopener">https://raw.githubusercontent.com/lennylxx/ipv6-hosts/master/hosts</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;方法是在hosts中指定谷歌学术的IPv6地址。&lt;br&gt;首先需要VPS支持IPv6。我使用的是vultr，在server information界面，点进Settings-IPv6进行分配地址，然后修改hosts文件。&lt;/p&gt;
&lt;p&gt;sudo nano /etc/hosts
      
    
    </summary>
    
    
      <category term="linux" scheme="https://qaqu.net/categories/linux/"/>
    
    
      <category term="vps" scheme="https://qaqu.net/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>Typecho限制首页文章摘要字数的修改方法</title>
    <link href="https://qaqu.net/2020-1-25-Typecho%E9%99%90%E5%88%B6%E9%A6%96%E9%A1%B5%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%AD%97%E6%95%B0%E7%9A%84%E4%BF%AE%E6%94%B9%E6%96%B9%E6%B3%95/"/>
    <id>https://qaqu.net/2020-1-25-Typecho%E9%99%90%E5%88%B6%E9%A6%96%E9%A1%B5%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%AD%97%E6%95%B0%E7%9A%84%E4%BF%AE%E6%94%B9%E6%96%B9%E6%B3%95/</id>
    <published>2020-01-24T16:00:00.000Z</published>
    <updated>2020-01-25T15:42:20.187Z</updated>
    
    <content type="html"><![CDATA[<p>Typecho内置了一个限制字数函数，可以通过这个函数限制字数的方式截断摘要。如果让其不显示，通过修改typecho主题模板实现。<br>1.登陆博客后台，把鼠标移至“控制台”，在下拉菜单中选择“外观”选项<br>2.编辑主题的index.php，在index.php文件找到这样的一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content(&#39;阅读剩余部分...&#39;); ?&gt;</span><br></pre></td></tr></table></figure><p>3.将其替换成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">excerpt(180, &#39;...&#39;); &#x2F;&#x2F;180就是摘要的字数，...是后缀; ?&gt;</span><br></pre></td></tr></table></figure><p>4.在archive.php中找到第2步的代码，将其替换为第3步中的代码，保存文件即可显示摘要，即博客首页和分类页均不显示文章全部内容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Typecho内置了一个限制字数函数，可以通过这个函数限制字数的方式截断摘要。如果让其不显示，通过修改typecho主题模板实现。&lt;br&gt;1.登陆博客后台，把鼠标移至“控制台”，在下拉菜单中选择“外观”选项&lt;br&gt;2.编辑主题的index.php，在index.php文件找
      
    
    </summary>
    
    
      <category term="Typecho" scheme="https://qaqu.net/categories/Typecho/"/>
    
    
      <category term="Typecho" scheme="https://qaqu.net/tags/Typecho/"/>
    
  </entry>
  
  <entry>
    <title>Chrome刷新清除某个特定网站的缓存</title>
    <link href="https://qaqu.net/2020-1-13-Chrome%E5%AF%B9%E7%89%B9%E5%AE%9A%E7%BD%91%E9%A1%B5%E5%88%B7%E6%96%B0%E7%BC%93%E5%AD%98/"/>
    <id>https://qaqu.net/2020-1-13-Chrome%E5%AF%B9%E7%89%B9%E5%AE%9A%E7%BD%91%E9%A1%B5%E5%88%B7%E6%96%B0%E7%BC%93%E5%AD%98/</id>
    <published>2020-01-12T16:00:00.000Z</published>
    <updated>2020-01-13T10:57:07.510Z</updated>
    
    <content type="html"><![CDATA[<p>打开F12开发者模式</p><p>右键浏览器的刷新按钮，会出现三个选项：正常重新加载，硬性重新加载，清空缓存并硬性重新加载</p><a id="more"></a><p>正常重新加载 Ctrl+R：正常重新加载。</p><p>硬性重新加载：Ctrl+Shift+R:浅层次的清除历史记录，但不一定缓存完全清除。(Ctrl+F5)同理。</p><p>清空缓存并硬性重新加载：可以深层次的清除所有的缓存。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;打开F12开发者模式&lt;/p&gt;
&lt;p&gt;右键浏览器的刷新按钮，会出现三个选项：正常重新加载，硬性重新加载，清空缓存并硬性重新加载&lt;/p&gt;
    
    </summary>
    
    
      <category term="服务器搭建" scheme="https://qaqu.net/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="服务器搭建" scheme="https://qaqu.net/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hexo4.2图片显示问题，修复hexo-asset-image</title>
    <link href="https://qaqu.net/2020-1-12-Hexo4.2%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
    <id>https://qaqu.net/2020-1-12-Hexo4.2%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</id>
    <published>2020-01-11T16:00:00.000Z</published>
    <updated>2020-01-12T07:28:59.746Z</updated>
    
    <content type="html"><![CDATA[<h1 id="插件安装与配置"><a href="#插件安装与配置" class="headerlink" title="插件安装与配置"></a>插件安装与配置</h1><p>首先我们需要安装一个图片路径转换的插件，这个插件名字是hexo-asset-image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>但是这个插件的内容需要修改【不然可能会出Bug】</p><p>打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line">var cheerio &#x3D; require(&#39;cheerio&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version &#x3D; String(hexo.version).split(&#39;.&#39;);</span><br><span class="line">hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;</span><br><span class="line">  var config &#x3D; hexo.config;</span><br><span class="line">  if(config.post_asset_folder)&#123;</span><br><span class="line">    var link &#x3D; data.permalink;</span><br><span class="line">if(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)</span><br><span class="line">   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;</span><br><span class="line">else</span><br><span class="line">   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;</span><br><span class="line">&#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.</span><br><span class="line">var endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;</span><br><span class="line">    link &#x3D; link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];</span><br><span class="line">    for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key &#x3D; toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ &#x3D; cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(&#39;img&#39;).each(function()&#123;</span><br><span class="line">if ($(this).attr(&#39;src&#39;))&#123;</span><br><span class="line">&#x2F;&#x2F; For windows style path, we replace &#39;\&#39; to &#39;&#x2F;&#39;.</span><br><span class="line">var src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;&#x2F;&#39;);</span><br><span class="line">if(!&#x2F;http[s]*.*|\&#x2F;\&#x2F;.*&#x2F;.test(src) &amp;&amp;</span><br><span class="line">   !&#x2F;^\s*\&#x2F;&#x2F;.test(src)) &#123;</span><br><span class="line">  &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.</span><br><span class="line">  &#x2F;&#x2F; In addition, to support multi-level local directory.</span><br><span class="line">  var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">return elem !&#x3D; &#39;&#39;;</span><br><span class="line">  &#125;);</span><br><span class="line">  var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">return elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;</span><br><span class="line">  &#125;);</span><br><span class="line">  if(srcArray.length &gt; 1)</span><br><span class="line">srcArray.shift();</span><br><span class="line">  src &#x3D; srcArray.join(&#39;&#x2F;&#39;);</span><br><span class="line">  $(this).attr(&#39;src&#39;, config.root + link + src);</span><br><span class="line">  console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">console.info&amp;&amp;console.info($(this));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] &#x3D; $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>打开_config.yml文件，修改下述内容</p><p>post_asset_folder: true</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;插件安装与配置&quot;&gt;&lt;a href=&quot;#插件安装与配置&quot; class=&quot;headerlink&quot; title=&quot;插件安装与配置&quot;&gt;&lt;/a&gt;插件安装与配置&lt;/h1&gt;&lt;p&gt;首先我们需要安装一个图片路径转换的插件，这个插件名字是hexo-asset-image&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;CodeFalling&amp;#x2F;hexo-asset-image --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是这个插件的内容需要修改【不然可能会出Bug】&lt;/p&gt;
&lt;p&gt;打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://qaqu.net/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://qaqu.net/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo升级命令</title>
    <link href="https://qaqu.net/2020-1-12-Hexo%E5%8D%87%E7%BA%A7%E5%91%BD%E4%BB%A4/"/>
    <id>https://qaqu.net/2020-1-12-Hexo%E5%8D%87%E7%BA%A7%E5%91%BD%E4%BB%A4/</id>
    <published>2020-01-11T16:00:00.000Z</published>
    <updated>2020-01-12T07:08:16.617Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo版本升级可以通过npm实现，相关命令如下：<br>先全局升级hexo-cli：-g表示全局升级。hexo本身是一个静态博客生成工具，具备编译Markdown、拼接主题模板、生成 HTML、上传 Git 等基本功能。hexo-cli能够将这些功能封装为命令，提供给用户通过hexo server / hexo deploy等命令调用的模块。CLI = Command Line Interface命令行界面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-cli -g</span><br></pre></td></tr></table></figure><ol><li>npm-check检查更新</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm-check</span><br><span class="line">npm-check</span><br></pre></td></tr></table></figure><ol start="2"><li>npm-upgrade更新</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm-upgrade</span><br><span class="line">npm-upgrade</span><br></pre></td></tr></table></figure><a id="more"></a><ol start="3"><li>更新全局包：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update &lt;name&gt; -g</span><br></pre></td></tr></table></figure><ol start="4"><li>更新生产环境依赖包：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update &lt;name&gt; --save</span><br></pre></td></tr></table></figure><p>save参数：npm install X –save:</p><p>会把X包安装到node_modules目录中<br>会在package.json的dependencies属性下添加X<br>之后运行npm install命令时，会自动安装X到node_modules目录中<br>如果不加save参数的话，之后把X包安装到node_modules目录中，不会添加到dependencies文件中。再查看hexo文件夹下面的dependencies文件,可以看到hexo的版本已经更新了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo版本升级可以通过npm实现，相关命令如下：&lt;br&gt;先全局升级hexo-cli：-g表示全局升级。hexo本身是一个静态博客生成工具，具备编译Markdown、拼接主题模板、生成 HTML、上传 Git 等基本功能。hexo-cli能够将这些功能封装为命令，提供给用户通过hexo server / hexo deploy等命令调用的模块。CLI = Command Line Interface命令行界面。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol&gt;
&lt;li&gt;npm-check检查更新&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g npm-check&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm-check&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;npm-upgrade更新&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g npm-upgrade&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm-upgrade&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://qaqu.net/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://qaqu.net/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Win2012（或2016）服务器IIS8（或IIS10）实现http自动跳转https</title>
    <link href="https://qaqu.net/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/"/>
    <id>https://qaqu.net/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/</id>
    <published>2020-01-10T16:00:00.000Z</published>
    <updated>2020-01-11T10:08:22.025Z</updated>
    
    <content type="html"><![CDATA[<p>1、安装ssl证书</p><img src="/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/1.png" class><a id="more"></a><p>2、导入相关证书</p><img src="/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/2.png" class><p>3、进入相关网站，绑定HTTPS主机头到网站。</p><img src="/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/3.png" class><p>4、安装URL重写工具。</p><img src="/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/4.png" class><p>5、在想要跳转的网站上，双击“url 重写”</p><img src="/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/5.png" class><p>6、添加空白规则</p><img src="/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/6.png" class><p>7、添加url规则<br>名称：http to https<br>模式：(.*)<br>展开条件</p><img src="/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/7.png" class><p>8、继续添加URL规则<br>添加条件<br>条件输入：{HTTPS}<br>模式：^OFF$</p><img src="/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/8.png" class><p>9、继续添加URL规则<br>操作类型：重定向<br>重定向URL：https://{HTTP_HOST}/{R:1}<br>重定向类型：已找到(302) 或 参阅其它(303)</p><img src="/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/9.png" class><p>10、最后一步，应用</p><img src="/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/10.png" class>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、安装ssl证书&lt;/p&gt;
&lt;img src=&quot;/2020-1-11-Win2012%EF%BC%88%E6%88%962016%EF%BC%89%E6%9C%8D%E5%8A%A1%E5%99%A8IIS8%EF%BC%88%E6%88%96IIS10%EF%BC%89%E5%AE%9E%E7%8E%B0http%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AChttps/1.png&quot; class&gt;
    
    </summary>
    
    
      <category term="服务器搭建" scheme="https://qaqu.net/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="服务器搭建" scheme="https://qaqu.net/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu上opencv3.2和opencv_contrib安装中遇到的错误记录(cuda9.0)</title>
    <link href="https://qaqu.net/2019-12-18-ubuntu%E4%B8%8Aopencv3.2%E5%92%8Copencv_contrib%E5%AE%89%E8%A3%85%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/"/>
    <id>https://qaqu.net/2019-12-18-ubuntu%E4%B8%8Aopencv3.2%E5%92%8Copencv_contrib%E5%AE%89%E8%A3%85%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/</id>
    <published>2019-12-17T16:00:00.000Z</published>
    <updated>2020-01-11T10:10:11.355Z</updated>
    
    <content type="html"><![CDATA[<p>改正版opencv_contrib 3.2下载地址</p><p><a href="https://blog.csdn.net/qsczse943062710/article/details/79181831" target="_blank" rel="noopener">https://blog.csdn.net/qsczse943062710/article/details/79181831</a></p><p>解压opencv-3.2.0，比如为/home/XXX/opencv-3.2.0</p><p>解压我给的opencv_contrib-3.2.0至opencv-3.2.0的目录下（解压完后路径为/home/XXX/opencv-3.2.0/opencv_contrib-3.2.0），并在此处新建一个build文件夹（路径为/home/XXX/opencv-3.2.0/build）</p><p>进入build，执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -D CMAKE_BUILD_TYPE&#x3D;Release -D CMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local -D OPENCV_EXTRA_MODULES_PATH&#x3D;&#x2F;home&#x2F;lyp&#x2F;Data&#x2F;Downtown&#x2F;opencv-3.2.0&#x2F;opencv_contrib&#x2F;modules -D CUDA_GENERATION&#x3D;Kepler ..</span><br></pre></td></tr></table></figure><p>因为是cuda9.0不再支持2.0架构所以要加上-D CUDA_GENERATION=Kepler</p><a id="more"></a><h1 id="遇到的错误"><a href="#遇到的错误" class="headerlink" title="遇到的错误"></a>遇到的错误</h1><h2 id="第一个错误"><a href="#第一个错误" class="headerlink" title="第一个错误"></a>第一个错误</h2><p>fatal error: LAPACKE_H_PATH-NOTFOUND/lapacke.h: No such file or directory #include “LAPACKE_H_PATH-NOTFOUND/lapacke.h” </p><p>原因：未找到lapacke.h文件</p><p>方法： </p><p>sudo apt-get install liblapacke-dev checkinstall </p><p>修改出现问题的文件，例如我的文件是 </p><p>opencv-3.2.0/build/opencv_lapack.h </p><p>将第二行中的#include”LAPACKE_H_PATH-NOTFOUND/lapacke.h” 修改为#include”lapacke.h”即可</p><h2 id="第二个错误"><a href="#第二个错误" class="headerlink" title="第二个错误"></a>第二个错误</h2><p>使用Cmake编译opencv源码遇到如下错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CMake Error: The following variables are used in this project, but they are set to NOTFOUND.</span><br><span class="line">Please set them or make sure they are set and tested correctly in the CMake files:</span><br><span class="line">CUDA_nppi_LIBRARY (ADVANCED)</span><br><span class="line">linked by target &quot;opencv_cudev&quot; in directory D:&#x2F;Cproject&#x2F;opencv&#x2F;opencv&#x2F;sources&#x2F;modules&#x2F;cudev</span><br><span class="line">linked by target &quot;opencv_cudev&quot; in directory D:&#x2F;Cproject&#x2F;opencv&#x2F;opencv&#x2F;sources&#x2F;modules&#x2F;cudev</span><br></pre></td></tr></table></figure><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>找到行</p><p>find_cuda_helper_libs(nppi)</p><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">find_cuda_helper_libs(nppial)</span><br><span class="line">find_cuda_helper_libs(nppicc)</span><br><span class="line">find_cuda_helper_libs(nppicom)</span><br><span class="line">find_cuda_helper_libs(nppidei)</span><br><span class="line">find_cuda_helper_libs(nppif)</span><br><span class="line">find_cuda_helper_libs(nppig)</span><br><span class="line">find_cuda_helper_libs(nppim)</span><br><span class="line">find_cuda_helper_libs(nppist)</span><br><span class="line">find_cuda_helper_libs(nppisu)</span><br><span class="line">find_cuda_helper_libs(nppitc)</span><br></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>找到行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set(CUDA_npp_LIBRARY &quot;$&#123;CUDA_nppc_LIBRARY&#125;;$&#123;CUDA_nppi_LIBRARY&#125;;$&#123;CUDA_npps_LIBRARY&#125;&quot;)</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set(CUDA_npp_LIBRARY &quot;$&#123;CUDA_nppc_LIBRARY&#125;;$&#123;CUDA_nppial_LIBRARY&#125;;$&#123;CUDA_nppicc_LIBRARY&#125;;$&#123;CUDA_nppicom_LIBRARY&#125;;$&#123;CUDA_nppidei_LIBRARY&#125;;$&#123;CUDA_nppif_LIBRARY&#125;;$&#123;CUDA_nppig_LIBRARY&#125;;$&#123;CUDA_nppim_LIBRARY&#125;;$&#123;CUDA_nppist_LIBRARY&#125;;$&#123;CUDA_nppisu_LIBRARY&#125;;$&#123;CUDA_nppitc_LIBRARY&#125;;$&#123;CUDA_npps_LIBRARY&#125;&quot;)</span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>找到行</p><p>unset(CUDA_nppi_LIBRARY CACHE)</p><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">unset(CUDA_nppial_LIBRARY CACHE)</span><br><span class="line">unset(CUDA_nppicc_LIBRARY CACHE)</span><br><span class="line">unset(CUDA_nppicom_LIBRARY CACHE)</span><br><span class="line">unset(CUDA_nppidei_LIBRARY CACHE)</span><br><span class="line">unset(CUDA_nppif_LIBRARY CACHE)</span><br><span class="line">unset(CUDA_nppig_LIBRARY CACHE)</span><br><span class="line">unset(CUDA_nppim_LIBRARY CACHE)</span><br><span class="line">unset(CUDA_nppist_LIBRARY CACHE)</span><br><span class="line">unset(CUDA_nppisu_LIBRARY CACHE)</span><br><span class="line">unset(CUDA_nppitc_LIBRARY CACHE)</span><br></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>找到文件OpenCVDetectCUDA.cmake</p><p>修改以下几行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"> set(__cuda_arch_ptx &quot;&quot;)</span><br><span class="line"> if(CUDA_GENERATION STREQUAL &quot;Fermi&quot;)</span><br><span class="line">   set(__cuda_arch_bin &quot;2.0&quot;)</span><br><span class="line"> elseif(CUDA_GENERATION STREQUAL &quot;Kepler&quot;)</span><br><span class="line">   set(__cuda_arch_bin &quot;3.0 3.5 3.7&quot;)</span><br><span class="line"> ...</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">set(__cuda_arch_ptx &quot;&quot;)</span><br><span class="line">if(CUDA_GENERATION STREQUAL &quot;Kepler&quot;)</span><br><span class="line">  set(__cuda_arch_bin &quot;3.0 3.5 3.7&quot;)</span><br><span class="line">elseif(CUDA_GENERATION STREQUAL &quot;Maxwell&quot;)</span><br><span class="line">  set(__cuda_arch_bin &quot;5.0 5.2&quot;)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>cuda9中有一个单独的halffloat(cuda_fp16.h)头文件,也应该被包括在opencv的目录里</p><p>将头文件cuda_fp16.h添加至 opencv\modules\cudev\include\opencv2\cudev\common.hpp</p><p>即在common.hpp中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;cuda_fp16.h&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;改正版opencv_contrib 3.2下载地址&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qsczse943062710/article/details/79181831&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/qsczse943062710/article/details/79181831&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;解压opencv-3.2.0，比如为/home/XXX/opencv-3.2.0&lt;/p&gt;
&lt;p&gt;解压我给的opencv_contrib-3.2.0至opencv-3.2.0的目录下（解压完后路径为/home/XXX/opencv-3.2.0/opencv_contrib-3.2.0），并在此处新建一个build文件夹（路径为/home/XXX/opencv-3.2.0/build）&lt;/p&gt;
&lt;p&gt;进入build，执行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cmake -D CMAKE_BUILD_TYPE&amp;#x3D;Release -D CMAKE_INSTALL_PREFIX&amp;#x3D;&amp;#x2F;usr&amp;#x2F;local -D OPENCV_EXTRA_MODULES_PATH&amp;#x3D;&amp;#x2F;home&amp;#x2F;lyp&amp;#x2F;Data&amp;#x2F;Downtown&amp;#x2F;opencv-3.2.0&amp;#x2F;opencv_contrib&amp;#x2F;modules -D CUDA_GENERATION&amp;#x3D;Kepler ..&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为是cuda9.0不再支持2.0架构所以要加上-D CUDA_GENERATION=Kepler&lt;/p&gt;
    
    </summary>
    
    
      <category term="opencv" scheme="https://qaqu.net/categories/opencv/"/>
    
    
      <category term="opencv" scheme="https://qaqu.net/tags/opencv/"/>
    
  </entry>
  
  <entry>
    <title>报错caffe_ mexa64 undefined symbol</title>
    <link href="https://qaqu.net/2019-9-19-%E6%8A%A5%E9%94%99caffe_%20mexa64%20undefined%20symbol/"/>
    <id>https://qaqu.net/2019-9-19-%E6%8A%A5%E9%94%99caffe_%20mexa64%20undefined%20symbol/</id>
    <published>2019-08-18T16:00:00.000Z</published>
    <updated>2019-12-20T08:42:10.367Z</updated>
    
    <content type="html"><![CDATA[<p>报错Invalid MEX-file<br>‘/home/lyp/Data/Downtown/LSART/LSART/caffe/matlab/+caffe/private/caffe_.mexa64’:<br>/home/lyp/Data/Matlab2014a/bin/glnxa64/../../sys/os/glnxa64/libstdc++.so.6:<br>version `GLIBCXX_3.4.21’ not found (required by<br>/home/lyp/Data/Downtown/LSART/LSART/caffe/matlab/+caffe/private/caffe_.mexa64)</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在目录下~&#x2F;Data&#x2F;Matlab2014a&#x2F;sys&#x2F;os&#x2F;glnxa64 更改软链接指向</span><br><span class="line">libstdc++.so.6 -&gt; &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libstdc++.so.6</span><br></pre></td></tr></table></figure><p>用matlab执行.m文件时报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Invalid MEX-file &#39;&#x2F;home&#x2F;dorothy&#x2F;environment&#x2F;caffe-master&#x2F;matlab&#x2F;+caffe&#x2F;private</span><br><span class="line">&#x2F;caffe_.mexa64&#39;: &#x2F;home&#x2F;dorothy&#x2F;environment&#x2F;caffe-master&#x2F;matlab&#x2F;+caffe&#x2F;private</span><br><span class="line">&#x2F;caffe_.mexa64: undefined symbol: </span><br><span class="line">_ZN2cv8imencodeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI</span><br></pre></td></tr></table></figure><p>解决办法：</p><p>将usr/local/MATLAB/R2015b/bin/glnxa64中，以下三个文件删掉，最好备份一下以防万一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">libopencv_core.so.2.4</span><br><span class="line">libopencv_highgui.so.2.4</span><br><span class="line">libopencv_imgproc.so.2.4</span><br></pre></td></tr></table></figure><p>/usr/lib/libharfbuzz.so.0: undefined symbol: FT_Get_Var_Blend_Coordinates问题的解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -sf  &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libfreetype.so.6 &#x2F;opt&#x2F;MATLAB&#x2F;R2012a&#x2F;bin&#x2F;glnx86&#x2F;libfreetype.so.6</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;报错Invalid MEX-file&lt;br&gt;‘/home/lyp/Data/Downtown/LSART/LSART/caffe/matlab/+caffe/private/caffe_.mexa64’:&lt;br&gt;/home/lyp/Data/Matlab2014a/bin/glnxa64/../../sys/os/glnxa64/libstdc++.so.6:&lt;br&gt;version `GLIBCXX_3.4.21’ not found (required by&lt;br&gt;/home/lyp/Data/Downtown/LSART/LSART/caffe/matlab/+caffe/private/caffe_.mexa64)&lt;/p&gt;
    
    </summary>
    
    
      <category term="caffe" scheme="https://qaqu.net/categories/caffe/"/>
    
    
      <category term="matcaffe" scheme="https://qaqu.net/tags/matcaffe/"/>
    
  </entry>
  
  <entry>
    <title>dpkg错误</title>
    <link href="https://qaqu.net/2019-8-8-dpkg%E9%94%99%E8%AF%AF/"/>
    <id>https://qaqu.net/2019-8-8-dpkg%E9%94%99%E8%AF%AF/</id>
    <published>2019-08-07T16:00:00.000Z</published>
    <updated>2019-12-20T08:42:31.651Z</updated>
    
    <content type="html"><![CDATA[<p>在输入sudo apt-get update后发现终端提示：</p><blockquote><p>E: 无法获得锁 /var/lib/dpkg/lock-frontend - open (11: 资源暂时不可用)<br>E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?</p></blockquote><a id="more"></a><h1 id="解决方案一："><a href="#解决方案一：" class="headerlink" title="解决方案一："></a>解决方案一：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e | grep apt</span><br></pre></td></tr></table></figure><p>然后执行：<code>sudo kill</code> 进程号</p><h1 id="解决方案二："><a href="#解决方案二：" class="headerlink" title="解决方案二："></a>解决方案二：</h1><p>有一种情况是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm &#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives&#x2F;lock</span><br><span class="line">sudo rm &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;lock</span><br></pre></td></tr></table></figure><p>但我遇到的情况是：E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it? </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm &#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives&#x2F;lock</span><br><span class="line">sudo rm &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;lock-frontend</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在输入sudo apt-get update后发现终端提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;E: 无法获得锁 /var/lib/dpkg/lock-frontend - open (11: 资源暂时不可用)&lt;br&gt;E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://qaqu.net/categories/linux/"/>
    
    
      <category term="常用" scheme="https://qaqu.net/tags/%E5%B8%B8%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04安装caffe及遇到的问题总结</title>
    <link href="https://qaqu.net/2019-8-7-Ubuntu16.04%E5%AE%89%E8%A3%85caffe%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>https://qaqu.net/2019-8-7-Ubuntu16.04%E5%AE%89%E8%A3%85caffe%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</id>
    <published>2019-08-06T16:00:00.000Z</published>
    <updated>2019-12-20T08:44:31.356Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础库安装"><a href="#基础库安装" class="headerlink" title="基础库安装"></a>基础库安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler libopenblas-dev</span><br><span class="line">sudo apt-get install --no-install-recommends libboost-all-dev</span><br><span class="line">sudo apt-get install libopenblas-dev</span><br></pre></td></tr></table></figure><h1 id="克隆caffe代码到本地"><a href="#克隆caffe代码到本地" class="headerlink" title="克隆caffe代码到本地"></a>克隆caffe代码到本地</h1><p>git clone <a href="https://github.com/BVLC/caffe.git" target="_blank" rel="noopener">https://github.com/BVLC/caffe.git</a></p><h1 id="修改Makefile-config、Makefile"><a href="#修改Makefile-config、Makefile" class="headerlink" title="修改Makefile.config、Makefile"></a>修改Makefile.config、Makefile</h1><p>Makefile.config中CUDA_ARCH变量配置。如果cuda 的版本号&gt;=9.0，则在该文件夹下找到CUDA_ARCH变量，并把：</p><p>gencode arch=compute_20,code=sm_20 \ </p><p>gencode arch=compute_20,code=sm_21</p><p>两行注释掉</p><a id="more"></a><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>解决办法是依据出现错误的顺序而给出的，为了方便，可以直接先执行所有解决办法后再安装caffe。</p><ol><li>./include/caffe/common.hpp:5:27: fatal error: gflags/gflags.h: No such file or directory</li></ol><p>解决办法：sudo apt-get install libgflags-dev</p><ol start="2"><li>./include/caffe/util/mkl_alternate.hpp:14:19: fatal error: cblas.h: No such file or directory</li></ol><p>解决办法：sudo apt-get install libblas-dev</p><ol start="3"><li>./include/caffe/util/hdf5.hpp:6:18: fatal error: hdf5.h: No such file or directory</li></ol><p>解决办法：在Makefile.config找到以下行并添加蓝色部分</p><p>INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include <font color="Blue">/usr/include/hdf5/serial</font> </p><p>LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib <font color="Blue">/usr/lib/x86_64-linux-gnu/hdf5/serial</font></p><ol start="4"><li>./include/caffe/util/db_lmdb.hpp:8:18: fatal error: lmdb.h: No such file or directory</li></ol><p>解决办法：sudo apt install liblmdb-dev</p><ol start="5"><li>/usr/bin/ld: cannot find -lcblas<br> /usr/bin/ld: cannot find -latlas</li></ol><p>解决办法：sudo apt install libatlas-base-dev</p><ol start="6"><li>./include/caffe/common.hpp:6:26: fatal error: glog/logging.h: No such file or directory</li></ol><p>解决方法：sudo apt-get install libgoogle-glog-dev</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础库安装&quot;&gt;&lt;a href=&quot;#基础库安装&quot; class=&quot;headerlink&quot; title=&quot;基础库安装&quot;&gt;&lt;/a&gt;基础库安装&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler libopenblas-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install --no-install-recommends libboost-all-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install libopenblas-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&quot;克隆caffe代码到本地&quot;&gt;&lt;a href=&quot;#克隆caffe代码到本地&quot; class=&quot;headerlink&quot; title=&quot;克隆caffe代码到本地&quot;&gt;&lt;/a&gt;克隆caffe代码到本地&lt;/h1&gt;&lt;p&gt;git clone &lt;a href=&quot;https://github.com/BVLC/caffe.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/BVLC/caffe.git&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;修改Makefile-config、Makefile&quot;&gt;&lt;a href=&quot;#修改Makefile-config、Makefile&quot; class=&quot;headerlink&quot; title=&quot;修改Makefile.config、Makefile&quot;&gt;&lt;/a&gt;修改Makefile.config、Makefile&lt;/h1&gt;&lt;p&gt;Makefile.config中CUDA_ARCH变量配置。如果cuda 的版本号&amp;gt;=9.0，则在该文件夹下找到CUDA_ARCH变量，并把：&lt;/p&gt;
&lt;p&gt;gencode arch=compute_20,code=sm_20 \ &lt;/p&gt;
&lt;p&gt;gencode arch=compute_20,code=sm_21&lt;/p&gt;
&lt;p&gt;两行注释掉&lt;/p&gt;
    
    </summary>
    
    
      <category term="caffe" scheme="https://qaqu.net/categories/caffe/"/>
    
    
      <category term="caffe" scheme="https://qaqu.net/tags/caffe/"/>
    
  </entry>
  
  <entry>
    <title>提速 git push速度</title>
    <link href="https://qaqu.net/2019-8-7-%E6%8F%90%E9%80%9F%20git%20push%E9%80%9F%E5%BA%A6/"/>
    <id>https://qaqu.net/2019-8-7-%E6%8F%90%E9%80%9F%20git%20push%E9%80%9F%E5%BA%A6/</id>
    <published>2019-08-06T16:00:00.000Z</published>
    <updated>2019-12-20T08:42:47.019Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代理服务器提速"><a href="#代理服务器提速" class="headerlink" title="代理服务器提速"></a>代理服务器提速</h1><p>如果你有shadowsocks的socket5代理，那么可以使用下面两条语句提速</p><p>前提是你的代理已经在运行</p><p>速度提升非常明显，之前几KB变成1-2MB的速度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy &#39;socks5:&#x2F;&#x2F;127.0.0.1:1080&#39; </span><br><span class="line">git config --global https.proxy &#39;socks5:&#x2F;&#x2F;127.0.0.1:1080&#39;</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;代理服务器提速&quot;&gt;&lt;a href=&quot;#代理服务器提速&quot; class=&quot;headerlink&quot; title=&quot;代理服务器提速&quot;&gt;&lt;/a&gt;代理服务器提速&lt;/h1&gt;&lt;p&gt;如果你有shadowsocks的socket5代理，那么可以使用下面两条语句提速&lt;/p&gt;
&lt;p&gt;前提是你的代理已经在运行&lt;/p&gt;
&lt;p&gt;速度提升非常明显，之前几KB变成1-2MB的速度。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global http.proxy &amp;#39;socks5:&amp;#x2F;&amp;#x2F;127.0.0.1:1080&amp;#39; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global https.proxy &amp;#39;socks5:&amp;#x2F;&amp;#x2F;127.0.0.1:1080&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://qaqu.net/categories/git/"/>
    
    
      <category term="git" scheme="https://qaqu.net/tags/git/"/>
    
  </entry>
  
</feed>
